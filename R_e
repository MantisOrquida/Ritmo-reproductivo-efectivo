---
title: "Calculo de Ro"
output:
  html_document:
    df_print: paged
---

##Actividad inciso a

#Calculamos el $R_0$ por el método de la pendiente.


```{r setup, include=FALSE, results=FALSE}
#Instalar las librerias necesarias y cargarlas
instalar <- function(paquete) {
    if (!require(paquete,character.only = TRUE,
                 quietly = TRUE, 
                 warn.conflicts = FALSE)){
          install.packages(as.character(paquete),
                           dependecies = TRUE,
                           repos = "http://cran.us.r-project.org")
          library(paquete,
                  character.only = TRUE, 
                  quietly = TRUE,
                  warn.conflicts = FALSE)
    }
}
libs <- c( 'readr', 'R0') 
lapply(libs, instalar)
```



Cargamos los datos relacionados al brote de covid-19 en iran
```{r}
data<-read.csv("Tabasco.csv", header=TRUE)     # Hay que poner el nombre de su archivo (Tip: ten el archivo de datos en la misma carpeta que este archivo)
names(data)<-c("dia","individual","acumulado")    
head(data)
```
```{r}
inicio <- 2                                       # Primer día de infección.
fin<- 137                                         # Hay que poner el día final. Creo que todos acaban en 137 pero hay que tener cuidado por si no.
d<-30                                          # Aquí va el día en el cual terminó el crecimiento exponencial.
Dias<-4:fin                                    # Recorran el primer número para ver claramente d.
pendiente<-numeric(length=length(Dias))          # Con está gráfica elige el día que termine el crecimiento exponencial y cambia su valor en la línea 44.
pendiente.se<-numeric(length=length(Dias))       
for (k in seq_along(Dias)){
  fit<-lm(log(individual + 1)~dia, data=subset(data, dia<=Dias[k]))
  pendiente[k]<-coef(summary(fit))[2,1]
  pendiente.se[k]<-coef(summary(fit))[2,2]
  R0.hat<-pendiente*2.5+1
  R0.se<-pendiente.se*2.5
}
 plot(pendiente~Dias,type="o")
 plot(pendiente.se~Dias,type="o")
```

#Calculamos el $R_0$ con la paquetría de R.

Ya se tiene la librería cargada, tenemos que crear el vector de casos por día:

```{r}
epid=data$individual+1
```

Según investigaciones previas de epidemiologos, el brote de covid-19 se puede modelas con una distribución Weibull, sabemos que el tiempo promedio de infección es de 3.95 días y tenemos datos para cada día:

```{r}
GT.covid<-generation.time("weibull",c(3.95,1))
```
Estimamos $R_0$ con los datos de incidencia usando el método con crecimiento exponencial:

```{r}
res.R<-estimate.R(epid,GT=GT.covid,methods=c("EG"))            # A partir de aquí recolectamos resultados.
(EG<-est.R0.EG(epid,GT.covid,begin=inicio,end=d,nsim=1000))
```

```{r}
plotfit(res.R)
```

```{r}
TD <- est.R0.TD(epid, GT.covid, begin=inicio, end=fin, nsim=300) 
TD
TD.weekly <- smooth.Rt(TD, 25)
```
Semanal
```{r}
TD.weekly # Los cuatro primeros números del vector aquí impreso es lo que hay que reportar.
```

```{r}
plot(TD.weekly)
```
